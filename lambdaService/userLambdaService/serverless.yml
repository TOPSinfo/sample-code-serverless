service: spot-me-lambdas-user-service

plugins:
  - serverless-webpack

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: '../../webpack.config.js'   # Name of webpack configuration file
    includeModules: false   # Node modules configuration for packaging
    packager: 'yarn'   # Packager that will be used to package your external modules
  package:
    individually: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiRootResourceId
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:*
        - ses:SendEmail
        - ses:SendRawEmail
      "Resource": "*"
  environment:
    DB_HOST: spot-me-db-instance.cdnduxceh2ya.us-east-1.rds.amazonaws.com
    DB_PORT: 5432
    DB_USER: spotmedev
    DB_PASSWORD: spotme?123
    DB_NAME: spot_me 
    stage: ${self:custom.stage}
functions:
  verifyOtp:
    handler: handler.verifyOtp
    events:
      - http:
          path: /auth/verify-otp
          method: post
          cors: true
  auth:
    handler: handler.auth
    events:
      - http:
          path: /auth/{phoneNo}
          method: get
          cors: true
      - sns: sendingOtp
  logout:
    handler: handler.logout
    events:
      - http:
          path: /auth/logout/{userId}
          method: get
          cors: true
